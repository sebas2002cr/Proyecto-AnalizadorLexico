package LexerParser;
import java_cup.runtime.*;

//utiliza class MyParser que genera el lexer.jflex, pequeños cambios de lo tomado de la página de cup
//cambios en parser code, init with y scan with {:

action code {:
	/*CODIGO DE JAVA
	https://www.jflex.de/
	http://www2.cs.tum.edu/projects/cup/examples.php*/
	public void hola() {
		System.out.println("Hola");
	}
	public void adios () {
		System.out.println("Adiós");
	}
:}

parser code {:
	// Connect this parser to a scanner!
	CodeLexer lex;

	@SuppressWarnings("deprecation")
	public parser(CodeLexer lex) {
		this.lex = lex;
		this.symbolFactory = new DefaultSymbolFactory();
	}
:}

init with {: :};

scan with {: return lex.next_token(); :};
/* Terminales (tokens retornados por el scanner). */
/* keywords */



/* operators */
terminal RUDOLPH, DASHER, COMET, VIXEN, TOTIN, RENILLO,
		GRINCH,
        QUIEN,
        KNECHT_RUPRECHT,
        KRAMPUS,
        BELSNICKEL,
        ZWARTE_PIET,
        SNOWBALL_ALABASTRO,
        PEPPER_MINSTIX,
        MELCHOR,
        GASPAR,
        BALTASAR;


terminal PERSONA,
        PAPA_NOEL,
        SANTA_CLAUS,
        SAN_NICOLAS,
        NINO_JESUS,
		COLACHO,
		SANTA;

terminal L_COLACHO,
		L_SAN_NICOLAS,
		L_PAPA_NOEL;

terminal ABRECUENTO,
		CIERRECUENTO,
		ABREEMPAQUE,
		CIERRAEMPAQUE,
		ABREREGALO,
		CIERRAREGALO;


//PRINT - READ - END
terminal NARRA, ESCUCHA, FINREGALO;


terminal ELFO, HADA, DUENDE, ENVUELVE, HACE, REVISA, ENVIA, CORTA;
terminal ENTREGA, COMA;




// no terminales
non terminal miLenguaje;
//produccion de inicio
start with miLenguaje;

miLenguaje ::= {:
	hola();
:}
PERSONA
{:
	adios();
:}
;